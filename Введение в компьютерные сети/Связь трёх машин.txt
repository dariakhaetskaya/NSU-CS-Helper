Настройка трёх машин для общения
---------------------------------------------------

		+------------------------------------------+
		| 	Настройка ipv4 для виртуальных машин   |
		+------------------------------------------+


	   +------------------+
	---| Машина №1 master |---
	   +------------------+
	   
Проверяем, что внутри /etc/network/interfaces написано:

###### /etc/network/interfaces #########################
source /etc/network/interfaces.d/*
########################################################

- Склонируем машину 2 раза (к их настройке перейдем позже), ОБЯЗАТЕЛЬНО сгенерировать новые MAC-адреса

Машину №1 переименуем в pelageech.local (ваше имя может быть другим)
	echo "pelageech.local" > /etc/hostname
	- перезагружаем

3 сетевых адаптера
	- NAT (внутри машины - enp0s3)
	- Внутренняя сеть intnet (enp0s8)
	- Внутренняя сеть intnet2 (enp0s9)

Проверить адаптеры:
	ip a s
	- Внутри должно быть как минимум 3 сетевых адаптера: enp0s3, enp0s8 и enp0s9

Идём в /etc/network/interfaces.d
Создаём внутри файлы enp0s8 и enp0s9

###### /etc/network/interfaces.d/enp0s8 ################
auto enp0s8
iface enp0s8 inet static
	address 192.168.15.1
	netmask 255.255.255.0
########################################################

###### /etc/network/interfaces.d/enp0s9 ################
auto enp0s9
iface enp0s9 inet static
	address 192.168.20.1
	netmask 255.255.255.0
########################################################

Перезапускаем networking
	sudo systemctl restart networking

Проверяем статус networking
	sudo systemctl status networking

	   +-----------+
	---| Машина №2 |---
	   +-----------+
	   
Переименовываем машину в новое уникальное имя, например pelageech2.local
Примечание: наверное, одинаковые имена не создадут помех, но на всякий пожарный сделаем разные

1 сетевой адаптер (ставим(!) в адаптер №2 в виртуалбоксе, чтобы название было enp0s8):
	- Внутренняя сеть intnet 
	
###### /etc/network/interfaces.d/enp0s8 ################
auto enp0s8
iface enp0s8 inet static
	address 192.168.15.2
	netmask 255.255.255.0
	gateway 192.168.15.1
########################################################


	   +-----------+
	---| Машина №3 |---
	   +-----------+
	   
Переименовываем.

1 сетевой адаптер (ставим(!) в адаптер №3 в виртуалбоксе, чтобы название было enp0s9):
	- Внутренняя сеть intnet2

###### /etc/network/interfaces.d/enp0s9 ################
auto enp0s9
iface enp0s9 inet static
	address 192.168.20.2
	netmask 255.255.255.0
	gateway 192.168.20.1
########################################################


Дополнительно:
	- address: ipv4 адрес данной машины
	- netmask: маска подсети, машины одной подсети способны видеть друг друга, разной - нет
	- gateway: шлюз, ip-адрес, куда отправляются запросы, если машина не знает, куда их отправлять
	
	
		+--------------------------+
		|	Связь между машинами   |
		+--------------------------+

Разрешить форвардинг для машины №1
	echo "1" > /proc/sys/net/ipv4/ip_forward
	
Теперь со 2-й машины можно пропинговать третью
	ping 192.168.20.2
	
Порядок запросов такой 	192.168.20.2 --> 192.168.20.1 # на гейтвэй
						192.168.15.1 --> 192.168.15.2 # ip в подсети найден
						

		+---------------------------+
		|	Подключение интернета   |
		+---------------------------+
Всё далее делается на машине №1

Устанавливаем утилиту iptables
	sudo apt-get install iptables
	
Чтобы после перезапуска не сбрасывался форвардинг
	- Заходим в /etc/sysctl.d/99-sysctl.conf
	- Раскомментровать строку 
		# net.ipv4.ip_forward = 1
		
Прописать маскарадинг
	sudo iptables -t nat -A POSTROUTING -o enp0s3 -j MASQUERADE
	
Теперь на двух slave-машинах можно выходить в интернет
	198.168.20.2 --> 192.168.20.1
						10.2.0.68 --> Internet-IP
						
Не забываем про "sudo systemctl restart networking"

Осталось сохранить настройки iptables:
	sudo apt-get install iptables-persistent (всё выбираем Yes)
	sudo netfilter-persistent save
	
P. S. Скорее всего вы не сможете пропинговать по именам сервисы типа google.com, но сможете пропинговать ip, например, 8.8.8.8
См. DNS.txt для разбора этого случая.
	
-------------------
Приложение:
  -	Быстрый доступ к командам:
	
	echo "new.hostname" > /etc/hostname 						# изменить имя hostname
	ip a s														# посмотреть все адаптеры
	sudo systemctl restart <service>							# перезапустить сервис, вместо <service>, например, networking
	sudo systemctl status <service>								# проверить статус сервиса
	sudo iptables -t nat -A POSTROUTING -o enp0s3 -j MASQUERADE # маскарадинг
		-A # append
			INPUT
			FORWARD
			OUTPUT
			# в каждом свои подкатегории
		-D # delete
		-p # protocol
		-o # адаптер
		-j # команда
		man iptables - подробнее
	sudo iptables -A FORWARD -p icmp -o enp0s8 -j DROP			# отбрасываем форвард пакеты для enp0s8
	sudo netfilter-persistent save								# сохранить настройки iptables